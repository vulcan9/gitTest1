console.log("프로젝트 진행 방법.js 파일을 참고하세요");

/*
//--------------------------
// 모듈 설치
//--------------------------

* 개발중인  app소스 자동으로 적용시켜주는 모듈
(소스 수정 후 매번 다시 실행할 필요 없도록 해줌)

	* nodemon 모듈 설치
	npm install nodemon -g
	nodemon "실행 js파일"

	* supervisor 모듈 설치
	npm install supervisor -g
	supervisor "실행 js파일"
	
* 프로젝트 생성을 위한 express 프레임웍

	* express  설치
	npm install express -g

//--------------------------
// express 프로젝트 생성
//--------------------------

*원하는 경로에서 하위 폴더로 express 프로젝트 생성

	* 생성
	express "프로젝트 디렉토리"

	* 필요한 의존 모듈 설치 (package.json 파일의 description 항목 참고)
	cd "프로젝트 디렉토리" && npm install
	
	* app 실행 (웹서버 실행)
	node app
	
	* 웹브라우져에서 http://localhost:3000 으로 접속하여 페이지 뜨는것을 확인한다.
	서버를 멈추려면 콘솔창에서 Ctrl+C를 누른다.

* 현재 하위 폴더에 설치되어 있는 모듈 확인
	npm list

//--------------------------
// Socket.io 모듈 설치
//--------------------------

다음 명령을 실행한다. 
node_modules 폴더가 없다면 하위에 생성되어 그 아래에 socket.io 폴더에 설치된다.
설치가 되지 않는다면 빈 폴더에 설치한 후 복사해 온다.

	* socket.io 모듈 설치
	npm install socket.io -g

////////////////////////////
// 프로젝트 구동 (socketServer) : socket 연결, GET 방식 통신 테스트
////////////////////////////

터미널의 위치가 프로젝트 폴더에 있는지 확인한다.
아니라면 이동한다.

	예) d 드라이브 아래에 있는 bingo 프로젝트 폴더로 이동하였다. (master) 라고 표시되는군...
	vulcan@HOME-PC /d/project/nodeJS/project/socketSample (master)

서버를 구동시킨다.
	vulcan@HOME-PC /d/project/nodeJS/project/socketSample (master)
	$ nodemon socketServer.js

브라우져에서 페이지를 확인한다.
	http://localhost
	
소켓서버가 구동된 상태에서 브라우져를 통해 client.html 파일이 열리면 정상적으로 socket 연결이 되었는지  확인하기 위함이다.
브라우져에서 개발자 도구를 통해 콘솔창을 확인하면 다음 서버에서 보낸 메세지가 출력되는지 확인한다.
	
	Object {hello: "world"} 
	
////////////////////////////
// 프로젝트 구동 (socketExpressServer) : socket 연결, POST 방식 통신 테스트
////////////////////////////

터미널의 위치가 프로젝트 폴더에 있는지 확인한다.
아니라면 이동한다.

	예) d 드라이브 아래에 있는 bingo 프로젝트 폴더로 이동하였다. (master) 라고 표시되는군...
	vulcan@HOME-PC /d/project/nodeJS/project/socketSample (master)

서버를 구동시킨다.
	vulcan@HOME-PC /d/project/nodeJS/project/socketSample (master)
	$ nodemon socketExpressServer.js

브라우져에서 페이지를 확인한다.

	http://localhost
	
client.html 내용이 출력되게 되는데 submit 타이핑 후 submit 버튼을 누르고 콘솔창에서 내용을 확인 한다.
POST 방식에 서버 호출 결과가 화면에 나타난다.

	Hello Upload : oooooooooo
*/

